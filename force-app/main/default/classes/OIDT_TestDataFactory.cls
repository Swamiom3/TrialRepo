@isTest
public class OIDT_TestDataFactory {

    public static void createTestRecords(){
        User_Settings__c userSetting = new User_Settings__c(Name= 'UAT USER',User_Name__c = 'XldlV29yay1TRi1TU0lELVVBVA==', User_Password__c='XldlV29yay1TRi1TU0lELVVBVA==');
        insert userSetting;
        final Id billingRecordTypeId = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Billing Account').getRecordTypeId();
        Map<String, Object> legalEntityValues= new Map<String, Object> {'name' => 'test saa',
                                                                      'CurrencyIsoCode' => 'CAD',
                                                                      'blng__ZipPostalCode__c' => 'L1A 3V6',
                                                                      'blng__State__c' => 'Test State',
                                                                      'blng__City__c' => 'Toronto',
                                                                      'blng__Country__c' => 'Canada'
                                                                      };
        blng__LegalEntity__c legalEntity=((blng__LegalEntity__c)TestingUtility.createTestRecords(blng__LegalEntity__c.sObjectType, legalEntityValues, true));

        List<Account> billingAccounts = new List<Account>();
        Account withooutBillingDetailsAccount = TestingUtility.createAccount('Account without billing details', false);
        
        billingAccounts=TestingUtility.createAccounts(2, 'Account with billing details', false);
        
        for (Account a: billingAccounts) {
            a.RecordTypeId = billingRecordTypeId;
            a.BillingCountry='Canada';
            a.BillingCity='Toronto';
            a.billingstate='Test State';
            a.BillingPostalCode='L1A 3V6';
            a.shippingCountry='Canada';
            a.ShippingCity='Toronto';
            a.ShippingState='test state';
            a.ShippingPostalCode='L1A 3V6';
        }
        billingAccounts.add(withooutBillingDetailsAccount);
        insert billingAccounts;   

        Building__c building = new Building__c();
        Map<String, Object> buildingValues= new Map<String, Object> {'Name' => 'Testbuildd-001',
                                                                      'Building_ID__c' => 'CAD',
                                                                      'UUID__c' => 'test',
                                                                      'Time_Zone__c' => 'America/Denver',
                                                                      'CurrencyIsoCode' => 'CAD',
                                                                      'Legal_Entity_Id__c' => legalEntity.id,
            														  'Default_Language__c' => 'English (India)',
            														  'Country__c ' => 'India'
                                                                      };    
        building=((Building__c)TestingUtility.createTestRecords(Building__c.sObjectType, buildingValues, true));

        SBQQ__Quote__c quote = new SBQQ__Quote__c();
        Map<String, Object> quoteValues= new Map<String, Object> {'SBQQ__Account__c' => billingAccounts[0].id,
                                                                      'Building_ID__c' => building.Id,
                                                                      'SBQQ__Status__c' => 'Approved',
                                                                      'CurrencyIsoCode' => 'CAD'
                                                                      };    
        quote=((SBQQ__Quote__c)TestingUtility.createTestRecords(SBQQ__Quote__c.sObjectType, quoteValues, true));
        

        Map<String, Object> creditNoteValues= new Map<String, Object> {'blng__Account__c' => billingAccounts[0].id,
                                                                      'Building_ID__c' => building.Id,
                                                                      'blng__CreditNoteDate__c' => System.today()
                                                                      };   
        blng__CreditNote__c creditNote =new blng__CreditNote__c();  
 
        creditNote=((blng__CreditNote__c)TestingUtility.createTestRecords(blng__CreditNote__c.sObjectType, creditNoteValues, true));


        Order ordr=new Order();
        Map<String, Object> orderValues= new Map<String, Object> {'AccountId' => billingAccounts[0].id,
                                                                      'Building_ID__c' => building.Id,
                                                                      'Status' => 'Draft',
                                                                      'EffectiveDate' => Date.today()
                                                                      };    
        ordr=((Order)TestingUtility.createTestRecords(Order.sObjectType, orderValues, true));   
        Map<String, Object> productValues=  new Map<String, Object> { 'Name' => 'Physical Membership', 
                                                                         'IsActive' => true, 
                                                                         'ProductCode' => '1',
                                                                         'Product_UUID__c' => UUIDHandler.generateVersion4()
                                                                         };
       
        Product2 product =((Product2)TestingUtility.createTestRecords(Product2.sObjectType, productValues, true));
        Inventory__c inventory = new Inventory__c();
        Map<String, Object> inventoryValues= new Map<String, Object> {'Name' => 'testinv',
                                                                      'UUID__c' => '1234',
                                                                      'Type__c' => 'Office',
                                                                      'List_Price__c' => 100,
             														   'Building__c' => building.Id
                                                                      };    
        inventory=((Inventory__c)TestingUtility.createTestRecords(Inventory__c.sObjectType, inventoryValues, true));       
        SBQQ__QuoteLine__c quoteLine = new SBQQ__QuoteLine__c();

        Map<String, Object> quoteLineValues= new Map<String, Object> {'SBQQ__Quote__c' => quote.Id,
                                                                      'Building_ID__c' => building.Id,
                                                                      'SBQQ__StartDate__c' => System.today(),
                                                                      'SBQQ__Number__c' => 1,
                                                                      'New_Move_in_Date__c' => System.today()+90,
                                                                      'SBQQ__EndDate__c' => System.today()+90,
                                                                      'SBQQ__Product__c' => product.Id, 
                                                                      'Inventory_Id__c' => inventory.Id,
                                                                      'New_End_Date__c' => System.today()+180
                                                                      };    
        quoteLine=((SBQQ__QuoteLine__c)TestingUtility.createTestRecords(SBQQ__QuoteLine__c.sObjectType, quoteLineValues, true));
        
        blng__Invoice__c invoice=new blng__Invoice__c();
        Map<String, Object> invoiceValues= new Map<String, Object> {'blng__Account__c' => billingAccounts[0].id,
                                                                      'Building_Id__c' => building.Id,
                                                                      'blng__InvoiceStatus__c' => 'Draft'
                                                                      };  
                                                                  
        invoice=((blng__Invoice__c)TestingUtility.createTestRecords(blng__Invoice__c.sObjectType, invoiceValues, true));            
 blng__CreditNoteLine__c     cnLineItem =new blng__CreditNoteLine__c  ();  
        Map<String, Object> cnLineItemValues= new Map<String, Object> {'blng__CreditNote__c' => creditNote.id,
                                                                        'blng__Product__c' => product.Id};  
                                                                  
        cnLineItem=((blng__CreditNoteLine__c    )TestingUtility.createTestRecords(blng__CreditNoteLine__c.sObjectType, cnLineItemValues, true));            
                       
                  
    }       

public class MockHttpResponseGenerator implements HttpCalloutMock {
      @TestVisible  String respBody='<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><taxCalculationResponse xmlns="http://www.sabrix.com/services/taxcalculationservice/2011-09-01"><OUTDATA version="G"><REQUEST_STATUS><IS_SUCCESS>true</IS_SUCCESS><IS_PARTIAL_SUCCESS>true</IS_PARTIAL_SUCCESS></REQUEST_STATUS><INVOICE><REQUEST_STATUS><IS_SUCCESS>true</IS_SUCCESS><IS_PARTIAL_SUCCESS>false</IS_PARTIAL_SUCCESS></REQUEST_STATUS><CALCULATION_DIRECTION>F</CALCULATION_DIRECTION><CALLING_SYSTEM_NUMBER>CPQ</CALLING_SYSTEM_NUMBER><COMPANY_ID>216268</COMPANY_ID><COMPANY_NAME>WeWork Canada Companies</COMPANY_NAME><CURRENCY_CODE>CAD</CURRENCY_CODE><CURRENCY_NAME>Canadian Dollar</CURRENCY_NAME><MIN_ACCOUNTABLE_UNIT>0.01</MIN_ACCOUNTABLE_UNIT><ROUNDING_PRECISION>2</ROUNDING_PRECISION><ROUNDING_RULE>1</ROUNDING_RULE><CUSTOMER_NAME>Billing Test</CUSTOMER_NAME><CUSTOMER_NUMBER>57GKHF</CUSTOMER_NUMBER><EXTERNAL_COMPANY_ID>1005283358-WWCA</EXTERNAL_COMPANY_ID><HOST_SYSTEM>Salesforce</HOST_SYSTEM><INVOICE_DATE>2021-09-09</INVOICE_DATE><INVOICE_NUMBER>CN-0023</INVOICE_NUMBER><IS_CREDIT>false</IS_CREDIT><MESSAGE><LOCATION>Sale.execute</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>TRANS_EDITOR_EVALUATED</CODE><MESSAGE_TEXT>TransEditor was evaluated for Input XML. TransEditor Sale Applied for Invoice</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>ZoneAddressPreparer.getLowestMatchingZones()</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>PARTIAL_ZONE_TREE_MATCH</CODE><MESSAGE_TEXT>Partial zone tree match was found. Address: SUPPLY: Canada, Toronto, M5J 2S3</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>ZoneAddressPreparer.getLowestMatchingZones()</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>PARTIAL_ZONE_TREE_MATCH</CODE><MESSAGE_TEXT>Partial zone tree match was found. Address: SHIP_FROM: Canada, Toronto, M6K 3C3</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>ZoneAddressPreparer.getLowestMatchingZones()</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>PARTIAL_ZONE_TREE_MATCH</CODE><MESSAGE_TEXT>Partial zone tree match was found. Address: SHIP_TO: Canada, Toronto, M5J 2S3</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>ZoneAddressPreparer.getLowestMatchingZones()</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>PARTIAL_ZONE_TREE_MATCH</CODE><MESSAGE_TEXT>Partial zone tree match was found. Address: SELLER_PRIMARY: Canada, Toronto, M6K 3C3</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>ZoneAddressPreparer.getLowestMatchingZones()</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>PARTIAL_ZONE_TREE_MATCH</CODE><MESSAGE_TEXT>Partial zone tree match was found. Address: BILL_TO: Canada, Toronto, M5J 2S3</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>ZoneAddressPreparer.getLowestMatchingZones()</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>PARTIAL_ZONE_TREE_MATCH</CODE><MESSAGE_TEXT>Partial zone tree match was found. Address: BUYER_PRIMARY: Canada, Toronto, M5J 2S3</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>ZoneAddressPreparer.getLowestMatchingZones()</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>PARTIAL_ZONE_TREE_MATCH</CODE><MESSAGE_TEXT>Partial zone tree match was found. Address: ORDER_ACCEPTANCE: Canada, Toronto, M5J 2S3</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>InvoicePreparer.performProductCrossReferenceGroupLookups</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>USING_COMPANY_ACTIVE_MAPPING_GROUP</CODE><MESSAGE_TEXT>Using companys active product mapping group.</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxController.calculateInvoice</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>TAX_RESULT_IS_ROUNDED</CODE><MESSAGE_TEXT>Output XML tax results are rounded. Rule [Round] Precision [2] MAU [0.01]</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxController.calculateInvoice</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>SUCCESSFUL_PROCESSING</CODE><MESSAGE_TEXT>Successful processing.</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><TOTAL_TAX_AMOUNT>-26.00</TOTAL_TAX_AMOUNT><TRANSACTION_DATE>2022-03-31</TRANSACTION_DATE><USER_ELEMENT><NAME>ATTRIBUTE11</NAME><VALUE>MTL-Place Ville Marie</VALUE></USER_ELEMENT><USER_ELEMENT><NAME>ATTRIBUTE14</NAME><VALUE>Billing Test</VALUE></USER_ELEMENT><LINE ID="1"><GROSS_AMOUNT>-200.00</GROSS_AMOUNT><LINE_NUMBER>10</LINE_NUMBER><MESSAGE><LOCATION>Set Seller Registration.execute</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>TRANS_EDITOR_EVALUATED</CODE><MESSAGE_TEXT>TransEditor was evaluated for Input XML. TransEditor Set Seller Registration Applied for LineItem</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>Sale.execute</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>TRANS_EDITOR_EVALUATED</CODE><MESSAGE_TEXT>TransEditor was evaluated for Input XML. TransEditor Sale Applied for LineItem</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>FilterGroup.execute</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>TRANS_EDITOR_GROUP_APPLIED</CODE><MESSAGE_TEXT>TransEditor Group was applied to Input XML. TransEditorGroupName=DEFAULT</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>FilterGroup.execute</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>TRANS_EDITOR_GROUP_APPLIED</CODE><MESSAGE_TEXT>TransEditor Group was applied to Input XML. TransEditorGroupName=DEFAULT</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: CAN - Toronto Hotel: Tourism Tax (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario: PST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Fees: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>isOtherRegisteredByZone</LOCATION><CATEGORY>INVOICE VALIDATION</CATEGORY><CODE>NO_VALID_REGISTRATION</CODE><MESSAGE_TEXT>No valid registration numbers were found for the authority. No valid BUYER registration found for Authority Ontario HST and Location ONTARIO with mask</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>NO_JURISDICTION</CODE><MESSAGE_TEXT>This authority has no jurisdiction to charge tax for this line item / address combination. Address: SF, BT, SU, SC, BC, OA; Authority: Ontario HST</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Canada (Ontario): GST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Tobacco Tax: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: CAN - Toronto Hotel: Tourism Tax (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario: PST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Fees: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.setProductCategoryValues</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>PRODUCT_NOT_FOUND_FOR_PRODUCT_CODE</CODE><MESSAGE_TEXT>A product could not be found for the supplied Product Code. LATE-FEE</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Canada (Ontario): GST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Tobacco Tax: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: CAN - Toronto Hotel: Tourism Tax (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario: PST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Fees: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Canada (Ontario): GST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Tobacco Tax: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: CAN - Toronto Hotel: Tourism Tax (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario: PST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Fees: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Canada (Ontario): GST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Tobacco Tax: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: CAN - Toronto Hotel: Tourism Tax (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario: PST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Fees: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Canada (Ontario): GST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Tobacco Tax: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: CAN - Toronto Hotel: Tourism Tax (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario: PST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Fees: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Canada (Ontario): GST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Tobacco Tax: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: CAN - Toronto Hotel: Tourism Tax (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario: PST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Fees: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Canada (Ontario): GST (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.determineApplicableTaxes()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>AUTHORITY_IS_TURNED_OFF</CODE><MESSAGE_TEXT>This authority has not been treated as taxable in this transaction due to a customization. Authority: Ontario Tobacco Tax: FEE (Sabrix INTL Tax Data)</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>CanadaDefaultTaxRoundingStrategy.round()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>APPLIED_CANADA_DEFAULT_ROUNDING</CODE><MESSAGE_TEXT>The default CANADA tax rounding rules were applied to the tax results in this calculation.</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><POINT_OF_TITLE_TRANSFER>I</POINT_OF_TITLE_TRANSFER><SHIP_FROM_COUNTRY>CANADA</SHIP_FROM_COUNTRY><SHIP_TO_COUNTRY>CANADA</SHIP_TO_COUNTRY><TOTAL_TAX_AMOUNT>-26.00</TOTAL_TAX_AMOUNT><TAX><ADDRESS_TYPE>ST</ADDRESS_TYPE><ADMIN_ZONE_LEVEL>Country</ADMIN_ZONE_LEVEL><AUTHORITY_NAME>Ontario HST</AUTHORITY_NAME><AUTHORITY_TYPE>HST</AUTHORITY_TYPE><CALCULATION_METHOD>1</CALCULATION_METHOD><COMMENT>ORACLE[ONHST]</COMMENT><ERP_TAX_CODE>ONHST</ERP_TAX_CODE><EFFECTIVE_ZONE_LEVEL>Country</EFFECTIVE_ZONE_LEVEL><INVOICE_DESCRIPTION>HST</INVOICE_DESCRIPTION><JURISDICTION_TEXT>GCSG1: Standard output HST in Ship To location.</JURISDICTION_TEXT><MESSAGE><LOCATION>TaxFinder.createTaxResult()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>APPLIED_TAX_DETERMINATION_DATE_RULE</CODE><MESSAGE_TEXT>Applied Tax Determination Date using this rule: DEFAULT TAX DATE LOGIC</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.createTaxResult()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>APPLIED_TAX_POINT_DATE_RULE</CODE><MESSAGE_TEXT>Applied Tax Point Date using this rule: DEFAULT TAX DATE LOGIC</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.createTaxResult()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>APPLIED_TAX_EXCHANGE_RATE_DATE_RULE</CODE><MESSAGE_TEXT>Applied Tax Exchange Rate Date using this rule: DEFAULT TAX DATE LOGIC</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.createTaxResult()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>APPLIED_SELLER_REGISTRATION_NUMBER</CODE><MESSAGE_TEXT>The following Seller registration number was applied to this tax result: 122226678RT</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><MESSAGE><LOCATION>TaxFinder.applyExemptCertificates()</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>CUSTOMER_NUMBER_NOT_FOUND</CODE><MESSAGE_TEXT>A customer could not be found for the supplied customer number.</MESSAGE_TEXT><SEVERITY>1</SEVERITY></MESSAGE><MESSAGE><LOCATION>ComplianceController</LOCATION><CATEGORY>CALCULATION</CATEGORY><CODE>ASSOCIATED_COMPLIANCE_AREA_NOT_FOUND</CODE><MESSAGE_TEXT>No associated Compliance Area found. No Compliance areas will be associated.</MESSAGE_TEXT><SEVERITY>0</SEVERITY></MESSAGE><SELLER_REGISTRATION>122226678RT</SELLER_REGISTRATION><RULE_ORDER>10000</RULE_ORDER><TAXABLE_COUNTRY>CA</TAXABLE_COUNTRY><TAXABLE_COUNTRY_NAME>CANADA</TAXABLE_COUNTRY_NAME><TAXABLE_PROVINCE>ONTARIO</TAXABLE_PROVINCE><TAXABLE_CITY>TORONTO</TAXABLE_CITY><TAXABLE_POSTCODE>M5J 2S3</TAXABLE_POSTCODE><TAX_DIRECTION>O</TAX_DIRECTION><TAX_RATE_CODE>HT</TAX_RATE_CODE><TAX_TYPE>S</TAX_TYPE><ZONE_NAME>ONTARIO</ZONE_NAME><ZONE_LEVEL>Country</ZONE_LEVEL><TAX_RATE>0.13</TAX_RATE><NATURE_OF_TAX>P</NATURE_OF_TAX><EU_TRANSACTION>false</EU_TRANSACTION><AUTHORITY_UUID>9bd32765-cc81-4457-b3a8-23dc748bba6d</AUTHORITY_UUID><AUTHORITY_CURRENCY_CODE>CAD</AUTHORITY_CURRENCY_CODE><CURRENCY_CONVERSION><TAX_EXCHANGE_RATE_DATE>2021-09-09</TAX_EXCHANGE_RATE_DATE></CURRENCY_CONVERSION><EXEMPT_AMOUNT><DOCUMENT_AMOUNT>0.00</DOCUMENT_AMOUNT><UNROUNDED_DOCUMENT_AMOUNT>0.0000000000</UNROUNDED_DOCUMENT_AMOUNT><AUTHORITY_AMOUNT>0.00</AUTHORITY_AMOUNT><UNROUNDED_AUTHORITY_AMOUNT>0.0000000000</UNROUNDED_AUTHORITY_AMOUNT></EXEMPT_AMOUNT><GROSS_AMOUNT><AUTHORITY_AMOUNT>-200.00</AUTHORITY_AMOUNT><UNROUNDED_AUTHORITY_AMOUNT>-200.0000000000</UNROUNDED_AUTHORITY_AMOUNT></GROSS_AMOUNT><NON_TAXABLE_BASIS><DOCUMENT_AMOUNT>0.00</DOCUMENT_AMOUNT><UNROUNDED_DOCUMENT_AMOUNT>0.0000000000</UNROUNDED_DOCUMENT_AMOUNT><AUTHORITY_AMOUNT>0.00</AUTHORITY_AMOUNT><UNROUNDED_AUTHORITY_AMOUNT>0.0000000000</UNROUNDED_AUTHORITY_AMOUNT></NON_TAXABLE_BASIS><TAXABLE_BASIS><DOCUMENT_AMOUNT>-200.00</DOCUMENT_AMOUNT><UNROUNDED_DOCUMENT_AMOUNT>-200.0000000000</UNROUNDED_DOCUMENT_AMOUNT><AUTHORITY_AMOUNT>-200.00</AUTHORITY_AMOUNT><UNROUNDED_AUTHORITY_AMOUNT>-200.0000000000</UNROUNDED_AUTHORITY_AMOUNT></TAXABLE_BASIS><TAX_AMOUNT><DOCUMENT_AMOUNT>-26.00</DOCUMENT_AMOUNT><UNROUNDED_DOCUMENT_AMOUNT>-26.0000000000</UNROUNDED_DOCUMENT_AMOUNT><AUTHORITY_AMOUNT>-26.00</AUTHORITY_AMOUNT><UNROUNDED_AUTHORITY_AMOUNT>-26.0000000000</UNROUNDED_AUTHORITY_AMOUNT></TAX_AMOUNT><TAX_DETERMINATION_DATE>2021-09-09</TAX_DETERMINATION_DATE><TAX_POINT_DATE>2021-09-09</TAX_POINT_DATE></TAX><TRANSACTION_TYPE>GS</TRANSACTION_TYPE><UNIT_OF_MEASURE>each</UNIT_OF_MEASURE><USER_ELEMENT><NAME>ATTRIBUTE15</NAME><VALUE>False</VALUE></USER_ELEMENT><QUANTITIES><QUANTITY><AMOUNT>1</AMOUNT><UOM>each</UOM></QUANTITY></QUANTITIES><IS_CREDIT>false</IS_CREDIT><INVOICE_DATE>2021-09-09</INVOICE_DATE><OPERATING_LICENSES><ASSUME_BUYER_FULLY_LICENSED>N</ASSUME_BUYER_FULLY_LICENSED><ASSUME_SELLER_FULLY_LICENSED>N</ASSUME_SELLER_FULLY_LICENSED></OPERATING_LICENSES><CUSTOMER_GROUP_NAME>DEFAULT</CUSTOMER_GROUP_NAME><CUSTOMER_GROUP_OWNER>WeWork Canada Companies</CUSTOMER_GROUP_OWNER><TAX_SUMMARY><TAXABLE_BASIS>-200.00</TAXABLE_BASIS><NON_TAXABLE_BASIS>0.00</NON_TAXABLE_BASIS><EXEMPT_AMOUNT>0.00</EXEMPT_AMOUNT><TAX_RATE>0.13</TAX_RATE><EFFECTIVE_TAX_RATE>0.13</EFFECTIVE_TAX_RATE></TAX_SUMMARY></LINE><OPERATING_LICENSES><ASSUME_BUYER_FULLY_LICENSED>N</ASSUME_BUYER_FULLY_LICENSED><ASSUME_SELLER_FULLY_LICENSED>N</ASSUME_SELLER_FULLY_LICENSED></OPERATING_LICENSES><COMPANY_ROLE>S</COMPANY_ROLE></INVOICE></OUTDATA></taxCalculationResponse></soap:Body></soap:Envelope>';
    public HTTPResponse respond(HTTPRequest req) {
        System.assertEquals('https://onesource-idt-det-uat-ws.hostedtax.thomsonreuters.com/sabrix/services/taxcalculationservice/2011-09-01/taxcalculationservice', req.getEndpoint());
        System.assertEquals('POST', req.getMethod());
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'text/xml');
        res.setBody(respBody);
        res.setStatusCode(200);
        return res;
    }
}
}